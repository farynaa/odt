Разработать python скрипт для автоматического подбора оптимальных порогов обнаружения объектов.

Прилагается файл detection_val_log.txt, содержащий результаты обнаружения объектов на картинках.
Каждая строка соответствует одной картинке. Строка содержит истинные данные (информацию разметки - что на самом деле есть на картинке) и результаты обнаружения.
Формат строки:
класс_объекта_1,left,top,right,bottom;класс_объекта_2,left,top,right,bottom;...;класс_объекта_N,left,top,right,bottom--класс_обнаруженного_объекта_1,left,top,right,bottom,confidence;...;класс_обнаруженного_объекта_M,left,top,right,bottom,confidence;
Обратить внимание:
1) данные слева от "--" - это истинные данные
2) данные справа от "--" - это результаты обнаружения
3) каждый размеченный объект включает в себя: класс, координаты bounding box (left, top, right, bottom);
4) каждый обнаруженный объект включает в себя: класс, координаты bounding box, вероятность обнаружения confidence.

Для автоматического подбора оптимальных порогов использовать критерий f1_score. Для его расчёта потребуется определить количество правильных обнаружений (TP), ложных обнаружений (FP), пропусков (FN). Для их определения потребуется сопоставить разметку с обнаружениями. При сопоставлении учитывать степень пересечения bounding boxes путём расчёта параметра Intersection Over Union (IOU). Использовать порог IOU=0.5 Накопить статистику по всем результатам (строкам).

Скрипт должен хорошо читаться и максимально быстро работать.
Пороги должны быть подобраны для каждого класса. Сколько всего и каких классов - определить из лога автоматически.
